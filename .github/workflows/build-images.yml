name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - name: generate Dockerfiles
      # run: ./generate_dockerfiles.sh

      - name: create matrix from directories
        id: set-matrix
        run: |
          JSON="{\"include\":["
          DOCKERFILES_DIR=dockerfiles
          for dir in ${DOCKERFILES_DIR}/*
          do
              PG_VERSION=${dir##*/}
              JSON="$JSON{\"Dockerfile\": \"${PG_VERSION}/Dockerfile\",\
                  \"tags\": \"$(cat $DOCKERFILES_DIR/${PG_VERSION}/tags.txt)\"},\
                  {\"Dockerfile\": \"${PG_VERSION}/alpine/Dockerfile\",\
                  \"tags\": \"$(cat $DOCKERFILES_DIR/${PG_VERSION}/alpine/tags.txt)\"},"
          done

          if [[ $JSON == *, ]]; then
              JSON="${JSON%?}"
          fi

          JSON="$JSON]}"

          echo $JSON
          echo "::set-output name=matrix::$( echo "$JSON" )"

  build:
    runs-on: ubuntu-latest
    needs: create-matrix
    strategy:
      matrix: ${{fromJson(needs.create-matrix.outputs.matrix)}}
    steps:
      - name: testing
        run: |
          echo "${{ matrix.Dockerfile }}: ${{ matrix.tags }}"

        #      - uses: actions/checkout@v2

        #      - name: Generate Dockerfiles
        #        run: ./generate_dockerfiles.sh
        #
        #      - name: Set up QEMU
        #        uses: docker/setup-qemu-action@v1
        #
        #      - name: Set up Docker Buildx
        #        uses: docker/setup-buildx-action@v1
        #
        #      - name: Login to DockerHub
        #        uses: docker/login-action@v1 
        #        with:
        #          username: ${{ secrets.USER }}
        #          password: ${{ secrets.TOKEN }}
        #
        #      - name: Build and push debian
        #        uses: docker/build-push-action@v2
        #        with:
        #          context: .
        #          file: ./Dockerfile.debian
        #          platforms: linux/amd64,linux/arm64
        #          push: true
        #          tags: |
        #            chenxinaz/pg_jieba:latest

